"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("source-map-support/register");

var _makerBase = _interopRequireDefault(require("@electron-forge/maker-base"));

var _path = _interopRequireDefault(require("path"));

var _util = require("util");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class MakerZIP extends _makerBase.default {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "name", 'zip');

    _defineProperty(this, "defaultPlatforms", ['darwin', 'mas', 'win32', 'linux']);
  }

  isSupportedOnCurrentPlatform() {
    return true;
  }

  async make({
    dir,
    makeDir,
    appName,
    packageJSON,
    targetArch,
    targetPlatform
  }) {
    // eslint-disable-next-line global-require
    const {
      zip
    } = require('cross-zip');

    const zipDir = ['darwin', 'mas'].includes(targetPlatform) ? _path.default.resolve(dir, `${appName}.app`) : dir;

    const zipPath = _path.default.resolve(makeDir, 'zip', targetPlatform, targetArch, `${_path.default.basename(dir)}-${packageJSON.version}.zip`);

    await this.ensureFile(zipPath);
    await (0, _util.promisify)(zip)(zipDir, zipPath);
    return [zipPath];
  }

}

exports.default = MakerZIP;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9NYWtlclpJUC50cyJdLCJuYW1lcyI6WyJNYWtlclpJUCIsIk1ha2VyQmFzZSIsImlzU3VwcG9ydGVkT25DdXJyZW50UGxhdGZvcm0iLCJtYWtlIiwiZGlyIiwibWFrZURpciIsImFwcE5hbWUiLCJwYWNrYWdlSlNPTiIsInRhcmdldEFyY2giLCJ0YXJnZXRQbGF0Zm9ybSIsInppcCIsInJlcXVpcmUiLCJ6aXBEaXIiLCJpbmNsdWRlcyIsInBhdGgiLCJyZXNvbHZlIiwiemlwUGF0aCIsImJhc2VuYW1lIiwidmVyc2lvbiIsImVuc3VyZUZpbGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUdBOztBQUNBOzs7Ozs7QUFJZSxNQUFNQSxRQUFOLFNBQXVCQyxrQkFBdkIsQ0FBaUQ7QUFBQTtBQUFBOztBQUFBLGtDQUN2RCxLQUR1RDs7QUFBQSw4Q0FHMUIsQ0FBQyxRQUFELEVBQVcsS0FBWCxFQUFrQixPQUFsQixFQUEyQixPQUEzQixDQUgwQjtBQUFBOztBQUs5REMsRUFBQUEsNEJBQTRCLEdBQVk7QUFDdEMsV0FBTyxJQUFQO0FBQ0Q7O0FBRVMsUUFBSkMsSUFBSSxDQUFDO0FBQUVDLElBQUFBLEdBQUY7QUFBT0MsSUFBQUEsT0FBUDtBQUFnQkMsSUFBQUEsT0FBaEI7QUFBeUJDLElBQUFBLFdBQXpCO0FBQXNDQyxJQUFBQSxVQUF0QztBQUFrREMsSUFBQUE7QUFBbEQsR0FBRCxFQUFzRztBQUM5RztBQUNBLFVBQU07QUFBRUMsTUFBQUE7QUFBRixRQUFVQyxPQUFPLENBQUMsV0FBRCxDQUF2Qjs7QUFFQSxVQUFNQyxNQUFNLEdBQUcsQ0FBQyxRQUFELEVBQVcsS0FBWCxFQUFrQkMsUUFBbEIsQ0FBMkJKLGNBQTNCLElBQTZDSyxjQUFLQyxPQUFMLENBQWFYLEdBQWIsRUFBbUIsR0FBRUUsT0FBUSxNQUE3QixDQUE3QyxHQUFtRkYsR0FBbEc7O0FBRUEsVUFBTVksT0FBTyxHQUFHRixjQUFLQyxPQUFMLENBQWFWLE9BQWIsRUFBc0IsS0FBdEIsRUFBNkJJLGNBQTdCLEVBQTZDRCxVQUE3QyxFQUEwRCxHQUFFTSxjQUFLRyxRQUFMLENBQWNiLEdBQWQsQ0FBbUIsSUFBR0csV0FBVyxDQUFDVyxPQUFRLE1BQXRHLENBQWhCOztBQUVBLFVBQU0sS0FBS0MsVUFBTCxDQUFnQkgsT0FBaEIsQ0FBTjtBQUNBLFVBQU0scUJBQVVOLEdBQVYsRUFBZUUsTUFBZixFQUF1QkksT0FBdkIsQ0FBTjtBQUVBLFdBQU8sQ0FBQ0EsT0FBRCxDQUFQO0FBQ0Q7O0FBckI2RCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBNYWtlckJhc2UsIHsgRW1wdHlDb25maWcsIE1ha2VyT3B0aW9ucyB9IGZyb20gJ0BlbGVjdHJvbi1mb3JnZS9tYWtlci1iYXNlJztcbmltcG9ydCB7IEZvcmdlUGxhdGZvcm0gfSBmcm9tICdAZWxlY3Ryb24tZm9yZ2Uvc2hhcmVkLXR5cGVzJztcblxuaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XG5pbXBvcnQgeyBwcm9taXNpZnkgfSBmcm9tICd1dGlsJztcblxuZXhwb3J0IHR5cGUgTWFrZXJaSVBDb25maWcgPSBFbXB0eUNvbmZpZztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTWFrZXJaSVAgZXh0ZW5kcyBNYWtlckJhc2U8TWFrZXJaSVBDb25maWc+IHtcbiAgbmFtZSA9ICd6aXAnO1xuXG4gIGRlZmF1bHRQbGF0Zm9ybXM6IEZvcmdlUGxhdGZvcm1bXSA9IFsnZGFyd2luJywgJ21hcycsICd3aW4zMicsICdsaW51eCddO1xuXG4gIGlzU3VwcG9ydGVkT25DdXJyZW50UGxhdGZvcm0oKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBhc3luYyBtYWtlKHsgZGlyLCBtYWtlRGlyLCBhcHBOYW1lLCBwYWNrYWdlSlNPTiwgdGFyZ2V0QXJjaCwgdGFyZ2V0UGxhdGZvcm0gfTogTWFrZXJPcHRpb25zKTogUHJvbWlzZTxzdHJpbmdbXT4ge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBnbG9iYWwtcmVxdWlyZVxuICAgIGNvbnN0IHsgemlwIH0gPSByZXF1aXJlKCdjcm9zcy16aXAnKTtcblxuICAgIGNvbnN0IHppcERpciA9IFsnZGFyd2luJywgJ21hcyddLmluY2x1ZGVzKHRhcmdldFBsYXRmb3JtKSA/IHBhdGgucmVzb2x2ZShkaXIsIGAke2FwcE5hbWV9LmFwcGApIDogZGlyO1xuXG4gICAgY29uc3QgemlwUGF0aCA9IHBhdGgucmVzb2x2ZShtYWtlRGlyLCAnemlwJywgdGFyZ2V0UGxhdGZvcm0sIHRhcmdldEFyY2gsIGAke3BhdGguYmFzZW5hbWUoZGlyKX0tJHtwYWNrYWdlSlNPTi52ZXJzaW9ufS56aXBgKTtcblxuICAgIGF3YWl0IHRoaXMuZW5zdXJlRmlsZSh6aXBQYXRoKTtcbiAgICBhd2FpdCBwcm9taXNpZnkoemlwKSh6aXBEaXIsIHppcFBhdGgpO1xuXG4gICAgcmV0dXJuIFt6aXBQYXRoXTtcbiAgfVxufVxuIl19