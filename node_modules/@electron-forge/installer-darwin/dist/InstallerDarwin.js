"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "InstallerOptions", {
  enumerable: true,
  get: function () {
    return _installerBase.InstallerOptions;
  }
});
exports.default = void 0;

require("source-map-support/register");

var _installerBase = _interopRequireWildcard(require("@electron-forge/installer-base"));

var _fsExtra = _interopRequireDefault(require("fs-extra"));

var _path = _interopRequireDefault(require("path"));

var _util = require("util");

var _sudoPrompt = _interopRequireDefault(require("sudo-prompt"));

var _child_process = require("child_process");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

class InstallerDarwin extends _installerBase.default {
  async moveApp(appPath, targetApplicationPath, spinner, copyInstead = false) {
    let writeAccess = true;

    try {
      await _fsExtra.default.access('/Applications', _fsExtra.default.constants.W_OK);
    } catch (err) {
      writeAccess = false;
    }

    if (await _fsExtra.default.pathExists(targetApplicationPath)) {
      spinner.fail();
      throw new Error(`The application "${_path.default.basename(targetApplicationPath)}" appears to already exist in /Applications.`);
    }

    const moveCommand = `${copyInstead ? 'cp -r' : 'mv'} "${appPath}" "${targetApplicationPath}"`;

    if (writeAccess) {
      await (0, _util.promisify)(_child_process.exec)(moveCommand);
    } else {
      await (0, _util.promisify)(_sudoPrompt.default.exec)(moveCommand, {
        name: 'Electron Forge'
      });
    }
  }

}

exports.default = InstallerDarwin;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9JbnN0YWxsZXJEYXJ3aW4udHMiXSwibmFtZXMiOlsiSW5zdGFsbGVyRGFyd2luIiwiSW5zdGFsbGVyQmFzZSIsIm1vdmVBcHAiLCJhcHBQYXRoIiwidGFyZ2V0QXBwbGljYXRpb25QYXRoIiwic3Bpbm5lciIsImNvcHlJbnN0ZWFkIiwid3JpdGVBY2Nlc3MiLCJmcyIsImFjY2VzcyIsImNvbnN0YW50cyIsIldfT0siLCJlcnIiLCJwYXRoRXhpc3RzIiwiZmFpbCIsIkVycm9yIiwicGF0aCIsImJhc2VuYW1lIiwibW92ZUNvbW1hbmQiLCJleGVjIiwic3VkbyIsIm5hbWUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUNBOztBQUVBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7OztBQUllLE1BQWVBLGVBQWYsU0FBdUNDLHNCQUF2QyxDQUFxRDtBQUNsRSxRQUFNQyxPQUFOLENBQ0VDLE9BREYsRUFFRUMscUJBRkYsRUFHRUMsT0FIRixFQUlFQyxXQUFXLEdBQUcsS0FKaEIsRUFLRTtBQUNBLFFBQUlDLFdBQVcsR0FBRyxJQUFsQjs7QUFDQSxRQUFJO0FBQ0YsWUFBTUMsaUJBQUdDLE1BQUgsQ0FBVSxlQUFWLEVBQTJCRCxpQkFBR0UsU0FBSCxDQUFhQyxJQUF4QyxDQUFOO0FBQ0QsS0FGRCxDQUVFLE9BQU9DLEdBQVAsRUFBWTtBQUNaTCxNQUFBQSxXQUFXLEdBQUcsS0FBZDtBQUNEOztBQUVELFFBQUksTUFBTUMsaUJBQUdLLFVBQUgsQ0FBY1QscUJBQWQsQ0FBVixFQUFnRDtBQUM5Q0MsTUFBQUEsT0FBTyxDQUFDUyxJQUFSO0FBQ0EsWUFBTSxJQUFJQyxLQUFKLENBQVcsb0JBQW1CQyxjQUFLQyxRQUFMLENBQWNiLHFCQUFkLENBQXFDLDhDQUFuRSxDQUFOO0FBQ0Q7O0FBRUQsVUFBTWMsV0FBVyxHQUFJLEdBQUVaLFdBQVcsR0FBRyxPQUFILEdBQWEsSUFBSyxLQUFJSCxPQUFRLE1BQUtDLHFCQUFzQixHQUEzRjs7QUFDQSxRQUFJRyxXQUFKLEVBQWlCO0FBQ2YsWUFBTSxxQkFBVVksbUJBQVYsRUFBZ0JELFdBQWhCLENBQU47QUFDRCxLQUZELE1BRU87QUFDTCxZQUFNLHFCQUFVRSxvQkFBS0QsSUFBZixFQUFxQkQsV0FBckIsRUFBa0M7QUFDdENHLFFBQUFBLElBQUksRUFBRTtBQURnQyxPQUFsQyxDQUFOO0FBR0Q7QUFDRjs7QUEzQmlFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT3JhSW1wbCB9IGZyb20gJ0BlbGVjdHJvbi1mb3JnZS9hc3luYy1vcmEnO1xuaW1wb3J0IEluc3RhbGxlckJhc2UsIHsgSW5zdGFsbGVyT3B0aW9ucyB9IGZyb20gJ0BlbGVjdHJvbi1mb3JnZS9pbnN0YWxsZXItYmFzZSc7XG5cbmltcG9ydCBmcyBmcm9tICdmcy1leHRyYSc7XG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcbmltcG9ydCB7IHByb21pc2lmeSB9IGZyb20gJ3V0aWwnO1xuaW1wb3J0IHN1ZG8gZnJvbSAnc3Vkby1wcm9tcHQnO1xuaW1wb3J0IHsgZXhlYyB9IGZyb20gJ2NoaWxkX3Byb2Nlc3MnO1xuXG5leHBvcnQgeyBJbnN0YWxsZXJPcHRpb25zIH07XG5cbmV4cG9ydCBkZWZhdWx0IGFic3RyYWN0IGNsYXNzIEluc3RhbGxlckRhcndpbiBleHRlbmRzIEluc3RhbGxlckJhc2Uge1xuICBhc3luYyBtb3ZlQXBwKFxuICAgIGFwcFBhdGg6IHN0cmluZyxcbiAgICB0YXJnZXRBcHBsaWNhdGlvblBhdGg6IHN0cmluZyxcbiAgICBzcGlubmVyOiBPcmFJbXBsLFxuICAgIGNvcHlJbnN0ZWFkID0gZmFsc2UsXG4gICkge1xuICAgIGxldCB3cml0ZUFjY2VzcyA9IHRydWU7XG4gICAgdHJ5IHtcbiAgICAgIGF3YWl0IGZzLmFjY2VzcygnL0FwcGxpY2F0aW9ucycsIGZzLmNvbnN0YW50cy5XX09LKTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIHdyaXRlQWNjZXNzID0gZmFsc2U7XG4gICAgfVxuXG4gICAgaWYgKGF3YWl0IGZzLnBhdGhFeGlzdHModGFyZ2V0QXBwbGljYXRpb25QYXRoKSkge1xuICAgICAgc3Bpbm5lci5mYWlsKCk7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYFRoZSBhcHBsaWNhdGlvbiBcIiR7cGF0aC5iYXNlbmFtZSh0YXJnZXRBcHBsaWNhdGlvblBhdGgpfVwiIGFwcGVhcnMgdG8gYWxyZWFkeSBleGlzdCBpbiAvQXBwbGljYXRpb25zLmApO1xuICAgIH1cblxuICAgIGNvbnN0IG1vdmVDb21tYW5kID0gYCR7Y29weUluc3RlYWQgPyAnY3AgLXInIDogJ212J30gXCIke2FwcFBhdGh9XCIgXCIke3RhcmdldEFwcGxpY2F0aW9uUGF0aH1cImA7XG4gICAgaWYgKHdyaXRlQWNjZXNzKSB7XG4gICAgICBhd2FpdCBwcm9taXNpZnkoZXhlYykobW92ZUNvbW1hbmQpO1xuICAgIH0gZWxzZSB7XG4gICAgICBhd2FpdCBwcm9taXNpZnkoc3Vkby5leGVjKShtb3ZlQ29tbWFuZCwge1xuICAgICAgICBuYW1lOiAnRWxlY3Ryb24gRm9yZ2UnLFxuICAgICAgfSk7XG4gICAgfVxuICB9XG59XG4iXX0=