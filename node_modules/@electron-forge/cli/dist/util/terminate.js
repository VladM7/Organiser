"use strict";

require("source-map-support/register");

var _chalk = _interopRequireDefault(require("chalk"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function redConsoleError(msg) {
  console.error(_chalk.default.red(msg));
}

process.on('unhandledRejection', (reason, promise) => {
  redConsoleError('\nAn unhandled rejection has occurred inside Forge:');
  redConsoleError(reason.toString());
  redConsoleError('\nElectron Forge was terminated. Location:');
  redConsoleError(JSON.stringify(promise));
  process.exit(1);
});
process.on('uncaughtException', err => {
  if (err && err.message && err.stack) {
    redConsoleError('\nAn unhandled exception has occurred inside Forge:');
    redConsoleError(err.message);
    redConsoleError(err.stack);
  } else {
    redConsoleError('\nElectron Forge was terminated:');
    redConsoleError(typeof err === 'string' ? err : JSON.stringify(err));
  }

  process.exit(1);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsL3Rlcm1pbmF0ZS50cyJdLCJuYW1lcyI6WyJyZWRDb25zb2xlRXJyb3IiLCJtc2ciLCJjb25zb2xlIiwiZXJyb3IiLCJjaGFsayIsInJlZCIsInByb2Nlc3MiLCJvbiIsInJlYXNvbiIsInByb21pc2UiLCJ0b1N0cmluZyIsIkpTT04iLCJzdHJpbmdpZnkiLCJleGl0IiwiZXJyIiwibWVzc2FnZSIsInN0YWNrIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7QUFFQSxTQUFTQSxlQUFULENBQXlCQyxHQUF6QixFQUFzQztBQUNwQ0MsRUFBQUEsT0FBTyxDQUFDQyxLQUFSLENBQWNDLGVBQU1DLEdBQU4sQ0FBVUosR0FBVixDQUFkO0FBQ0Q7O0FBRURLLE9BQU8sQ0FBQ0MsRUFBUixDQUFXLG9CQUFYLEVBQWlDLENBQUNDLE1BQUQsRUFBaUJDLE9BQWpCLEtBQStDO0FBQzlFVCxFQUFBQSxlQUFlLENBQUMscURBQUQsQ0FBZjtBQUNBQSxFQUFBQSxlQUFlLENBQUNRLE1BQU0sQ0FBQ0UsUUFBUCxFQUFELENBQWY7QUFDQVYsRUFBQUEsZUFBZSxDQUFDLDRDQUFELENBQWY7QUFDQUEsRUFBQUEsZUFBZSxDQUFDVyxJQUFJLENBQUNDLFNBQUwsQ0FBZUgsT0FBZixDQUFELENBQWY7QUFDQUgsRUFBQUEsT0FBTyxDQUFDTyxJQUFSLENBQWEsQ0FBYjtBQUNELENBTkQ7QUFRQVAsT0FBTyxDQUFDQyxFQUFSLENBQVcsbUJBQVgsRUFBaUNPLEdBQUQsSUFBUztBQUN2QyxNQUFJQSxHQUFHLElBQUlBLEdBQUcsQ0FBQ0MsT0FBWCxJQUFzQkQsR0FBRyxDQUFDRSxLQUE5QixFQUFxQztBQUNuQ2hCLElBQUFBLGVBQWUsQ0FBQyxxREFBRCxDQUFmO0FBQ0FBLElBQUFBLGVBQWUsQ0FBQ2MsR0FBRyxDQUFDQyxPQUFMLENBQWY7QUFDQWYsSUFBQUEsZUFBZSxDQUFDYyxHQUFHLENBQUNFLEtBQUwsQ0FBZjtBQUNELEdBSkQsTUFJTztBQUNMaEIsSUFBQUEsZUFBZSxDQUFDLGtDQUFELENBQWY7QUFDQUEsSUFBQUEsZUFBZSxDQUFDLE9BQU9jLEdBQVAsS0FBZSxRQUFmLEdBQTBCQSxHQUExQixHQUFnQ0gsSUFBSSxDQUFDQyxTQUFMLENBQWVFLEdBQWYsQ0FBakMsQ0FBZjtBQUNEOztBQUNEUixFQUFBQSxPQUFPLENBQUNPLElBQVIsQ0FBYSxDQUFiO0FBQ0QsQ0FWRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjaGFsayBmcm9tICdjaGFsayc7XG5cbmZ1bmN0aW9uIHJlZENvbnNvbGVFcnJvcihtc2c6IHN0cmluZykge1xuICBjb25zb2xlLmVycm9yKGNoYWxrLnJlZChtc2cpKTtcbn1cblxucHJvY2Vzcy5vbigndW5oYW5kbGVkUmVqZWN0aW9uJywgKHJlYXNvbjogc3RyaW5nLCBwcm9taXNlOiBQcm9taXNlPHVua25vd24+KSA9PiB7XG4gIHJlZENvbnNvbGVFcnJvcignXFxuQW4gdW5oYW5kbGVkIHJlamVjdGlvbiBoYXMgb2NjdXJyZWQgaW5zaWRlIEZvcmdlOicpO1xuICByZWRDb25zb2xlRXJyb3IocmVhc29uLnRvU3RyaW5nKCkpO1xuICByZWRDb25zb2xlRXJyb3IoJ1xcbkVsZWN0cm9uIEZvcmdlIHdhcyB0ZXJtaW5hdGVkLiBMb2NhdGlvbjonKTtcbiAgcmVkQ29uc29sZUVycm9yKEpTT04uc3RyaW5naWZ5KHByb21pc2UpKTtcbiAgcHJvY2Vzcy5leGl0KDEpO1xufSk7XG5cbnByb2Nlc3Mub24oJ3VuY2F1Z2h0RXhjZXB0aW9uJywgKGVycikgPT4ge1xuICBpZiAoZXJyICYmIGVyci5tZXNzYWdlICYmIGVyci5zdGFjaykge1xuICAgIHJlZENvbnNvbGVFcnJvcignXFxuQW4gdW5oYW5kbGVkIGV4Y2VwdGlvbiBoYXMgb2NjdXJyZWQgaW5zaWRlIEZvcmdlOicpO1xuICAgIHJlZENvbnNvbGVFcnJvcihlcnIubWVzc2FnZSk7XG4gICAgcmVkQ29uc29sZUVycm9yKGVyci5zdGFjayk7XG4gIH0gZWxzZSB7XG4gICAgcmVkQ29uc29sZUVycm9yKCdcXG5FbGVjdHJvbiBGb3JnZSB3YXMgdGVybWluYXRlZDonKTtcbiAgICByZWRDb25zb2xlRXJyb3IodHlwZW9mIGVyciA9PT0gJ3N0cmluZycgPyBlcnIgOiBKU09OLnN0cmluZ2lmeShlcnIpKTtcbiAgfVxuICBwcm9jZXNzLmV4aXQoMSk7XG59KTtcbiJdfQ==