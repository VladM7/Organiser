"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("source-map-support/register");

var _asyncOra = require("@electron-forge/async-ora");

var _templateBase = require("@electron-forge/template-base");

var _fsExtra = _interopRequireDefault(require("fs-extra"));

var _path = _interopRequireDefault(require("path"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// TODO: Use the @zeit publish once https://github.com/zeit/webpack-asset-relocator-loader/pull/41 has been merged
class WebpackTemplate extends _templateBase.BaseTemplate {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "templateDir", _path.default.resolve(__dirname, '..', 'tmpl'));
  }

  async initializeTemplate(directory, options) {
    await super.initializeTemplate(directory, options);
    await (0, _asyncOra.asyncOra)('Setting up Forge configuration', async () => {
      const pjPath = _path.default.resolve(directory, 'package.json');

      const currentPJ = await _fsExtra.default.readJson(pjPath);
      currentPJ.main = '.webpack/main';
      currentPJ.config.forge.plugins = currentPJ.config.forge.plugins || [];
      currentPJ.config.forge.plugins.push(['@electron-forge/plugin-webpack', {
        mainConfig: './webpack.main.config.js',
        renderer: {
          config: './webpack.renderer.config.js',
          entryPoints: [{
            html: './src/index.html',
            js: './src/renderer.js',
            name: 'main_window'
          }]
        }
      }]);
      await _fsExtra.default.writeJson(pjPath, currentPJ, {
        spaces: 2
      });
    });
    await (0, _asyncOra.asyncOra)('Setting up webpack configuration', async () => {
      await this.copyTemplateFile(directory, 'webpack.main.config.js');
      await this.copyTemplateFile(directory, 'webpack.renderer.config.js');
      await this.copyTemplateFile(directory, 'webpack.rules.js');
      await this.copyTemplateFile(_path.default.join(directory, 'src'), 'renderer.js');
      await this.updateFileByLine(_path.default.resolve(directory, 'src', 'index.js'), line => {
        if (line.includes('mainWindow.loadFile')) return '  mainWindow.loadURL(MAIN_WINDOW_WEBPACK_ENTRY);';
        return line;
      }, _path.default.resolve(directory, 'src', 'main.js'));
      await this.updateFileByLine(_path.default.resolve(directory, 'src', 'index.html'), line => {
        if (line.includes('link rel="stylesheet"')) return '';
        return line;
      });
    });
  }

}

var _default = new WebpackTemplate();

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9XZWJwYWNrVGVtcGxhdGUudHMiXSwibmFtZXMiOlsiV2VicGFja1RlbXBsYXRlIiwiQmFzZVRlbXBsYXRlIiwicGF0aCIsInJlc29sdmUiLCJfX2Rpcm5hbWUiLCJpbml0aWFsaXplVGVtcGxhdGUiLCJkaXJlY3RvcnkiLCJvcHRpb25zIiwicGpQYXRoIiwiY3VycmVudFBKIiwiZnMiLCJyZWFkSnNvbiIsIm1haW4iLCJjb25maWciLCJmb3JnZSIsInBsdWdpbnMiLCJwdXNoIiwibWFpbkNvbmZpZyIsInJlbmRlcmVyIiwiZW50cnlQb2ludHMiLCJodG1sIiwianMiLCJuYW1lIiwid3JpdGVKc29uIiwic3BhY2VzIiwiY29weVRlbXBsYXRlRmlsZSIsImpvaW4iLCJ1cGRhdGVGaWxlQnlMaW5lIiwibGluZSIsImluY2x1ZGVzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFFQTs7Ozs7O0FBRUE7QUFDQSxNQUFNQSxlQUFOLFNBQThCQywwQkFBOUIsQ0FBMkM7QUFBQTtBQUFBOztBQUFBLHlDQUNwQkMsY0FBS0MsT0FBTCxDQUFhQyxTQUFiLEVBQXdCLElBQXhCLEVBQThCLE1BQTlCLENBRG9CO0FBQUE7O0FBR3pDLFFBQWFDLGtCQUFiLENBQWdDQyxTQUFoQyxFQUFtREMsT0FBbkQsRUFBaUY7QUFDL0UsVUFBTSxNQUFNRixrQkFBTixDQUF5QkMsU0FBekIsRUFBb0NDLE9BQXBDLENBQU47QUFDQSxVQUFNLHdCQUFTLGdDQUFULEVBQTJDLFlBQVk7QUFDM0QsWUFBTUMsTUFBTSxHQUFHTixjQUFLQyxPQUFMLENBQWFHLFNBQWIsRUFBd0IsY0FBeEIsQ0FBZjs7QUFDQSxZQUFNRyxTQUFTLEdBQUcsTUFBTUMsaUJBQUdDLFFBQUgsQ0FBWUgsTUFBWixDQUF4QjtBQUNBQyxNQUFBQSxTQUFTLENBQUNHLElBQVYsR0FBaUIsZUFBakI7QUFDQUgsTUFBQUEsU0FBUyxDQUFDSSxNQUFWLENBQWlCQyxLQUFqQixDQUF1QkMsT0FBdkIsR0FBaUNOLFNBQVMsQ0FBQ0ksTUFBVixDQUFpQkMsS0FBakIsQ0FBdUJDLE9BQXZCLElBQWtDLEVBQW5FO0FBQ0FOLE1BQUFBLFNBQVMsQ0FBQ0ksTUFBVixDQUFpQkMsS0FBakIsQ0FBdUJDLE9BQXZCLENBQStCQyxJQUEvQixDQUFvQyxDQUNsQyxnQ0FEa0MsRUFFbEM7QUFDRUMsUUFBQUEsVUFBVSxFQUFFLDBCQURkO0FBRUVDLFFBQUFBLFFBQVEsRUFBRTtBQUNSTCxVQUFBQSxNQUFNLEVBQUUsOEJBREE7QUFFUk0sVUFBQUEsV0FBVyxFQUFFLENBQUM7QUFDWkMsWUFBQUEsSUFBSSxFQUFFLGtCQURNO0FBRVpDLFlBQUFBLEVBQUUsRUFBRSxtQkFGUTtBQUdaQyxZQUFBQSxJQUFJLEVBQUU7QUFITSxXQUFEO0FBRkw7QUFGWixPQUZrQyxDQUFwQztBQWNBLFlBQU1aLGlCQUFHYSxTQUFILENBQWFmLE1BQWIsRUFBcUJDLFNBQXJCLEVBQWdDO0FBQ3BDZSxRQUFBQSxNQUFNLEVBQUU7QUFENEIsT0FBaEMsQ0FBTjtBQUdELEtBdEJLLENBQU47QUF1QkEsVUFBTSx3QkFBUyxrQ0FBVCxFQUE2QyxZQUFZO0FBQzdELFlBQU0sS0FBS0MsZ0JBQUwsQ0FBc0JuQixTQUF0QixFQUFpQyx3QkFBakMsQ0FBTjtBQUNBLFlBQU0sS0FBS21CLGdCQUFMLENBQXNCbkIsU0FBdEIsRUFBaUMsNEJBQWpDLENBQU47QUFDQSxZQUFNLEtBQUttQixnQkFBTCxDQUFzQm5CLFNBQXRCLEVBQWlDLGtCQUFqQyxDQUFOO0FBQ0EsWUFBTSxLQUFLbUIsZ0JBQUwsQ0FBc0J2QixjQUFLd0IsSUFBTCxDQUFVcEIsU0FBVixFQUFxQixLQUFyQixDQUF0QixFQUFtRCxhQUFuRCxDQUFOO0FBRUEsWUFBTSxLQUFLcUIsZ0JBQUwsQ0FBc0J6QixjQUFLQyxPQUFMLENBQWFHLFNBQWIsRUFBd0IsS0FBeEIsRUFBK0IsVUFBL0IsQ0FBdEIsRUFBbUVzQixJQUFELElBQVU7QUFDaEYsWUFBSUEsSUFBSSxDQUFDQyxRQUFMLENBQWMscUJBQWQsQ0FBSixFQUEwQyxPQUFPLGtEQUFQO0FBQzFDLGVBQU9ELElBQVA7QUFDRCxPQUhLLEVBR0gxQixjQUFLQyxPQUFMLENBQWFHLFNBQWIsRUFBd0IsS0FBeEIsRUFBK0IsU0FBL0IsQ0FIRyxDQUFOO0FBS0EsWUFBTSxLQUFLcUIsZ0JBQUwsQ0FBc0J6QixjQUFLQyxPQUFMLENBQWFHLFNBQWIsRUFBd0IsS0FBeEIsRUFBK0IsWUFBL0IsQ0FBdEIsRUFBcUVzQixJQUFELElBQVU7QUFDbEYsWUFBSUEsSUFBSSxDQUFDQyxRQUFMLENBQWMsdUJBQWQsQ0FBSixFQUE0QyxPQUFPLEVBQVA7QUFDNUMsZUFBT0QsSUFBUDtBQUNELE9BSEssQ0FBTjtBQUlELEtBZkssQ0FBTjtBQWdCRDs7QUE1Q3dDOztlQStDNUIsSUFBSTVCLGVBQUosRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFzeW5jT3JhIH0gZnJvbSAnQGVsZWN0cm9uLWZvcmdlL2FzeW5jLW9yYSc7XG5pbXBvcnQgeyBCYXNlVGVtcGxhdGUgfSBmcm9tICdAZWxlY3Ryb24tZm9yZ2UvdGVtcGxhdGUtYmFzZSc7XG5pbXBvcnQgZnMgZnJvbSAnZnMtZXh0cmEnO1xuaW1wb3J0IHsgSW5pdFRlbXBsYXRlT3B0aW9ucyB9IGZyb20gJ0BlbGVjdHJvbi1mb3JnZS9zaGFyZWQtdHlwZXMnO1xuaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XG5cbi8vIFRPRE86IFVzZSB0aGUgQHplaXQgcHVibGlzaCBvbmNlIGh0dHBzOi8vZ2l0aHViLmNvbS96ZWl0L3dlYnBhY2stYXNzZXQtcmVsb2NhdG9yLWxvYWRlci9wdWxsLzQxIGhhcyBiZWVuIG1lcmdlZFxuY2xhc3MgV2VicGFja1RlbXBsYXRlIGV4dGVuZHMgQmFzZVRlbXBsYXRlIHtcbiAgcHVibGljIHRlbXBsYXRlRGlyID0gcGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgJy4uJywgJ3RtcGwnKTtcblxuICBwdWJsaWMgYXN5bmMgaW5pdGlhbGl6ZVRlbXBsYXRlKGRpcmVjdG9yeTogc3RyaW5nLCBvcHRpb25zOiBJbml0VGVtcGxhdGVPcHRpb25zKSB7XG4gICAgYXdhaXQgc3VwZXIuaW5pdGlhbGl6ZVRlbXBsYXRlKGRpcmVjdG9yeSwgb3B0aW9ucyk7XG4gICAgYXdhaXQgYXN5bmNPcmEoJ1NldHRpbmcgdXAgRm9yZ2UgY29uZmlndXJhdGlvbicsIGFzeW5jICgpID0+IHtcbiAgICAgIGNvbnN0IHBqUGF0aCA9IHBhdGgucmVzb2x2ZShkaXJlY3RvcnksICdwYWNrYWdlLmpzb24nKTtcbiAgICAgIGNvbnN0IGN1cnJlbnRQSiA9IGF3YWl0IGZzLnJlYWRKc29uKHBqUGF0aCk7XG4gICAgICBjdXJyZW50UEoubWFpbiA9ICcud2VicGFjay9tYWluJztcbiAgICAgIGN1cnJlbnRQSi5jb25maWcuZm9yZ2UucGx1Z2lucyA9IGN1cnJlbnRQSi5jb25maWcuZm9yZ2UucGx1Z2lucyB8fCBbXTtcbiAgICAgIGN1cnJlbnRQSi5jb25maWcuZm9yZ2UucGx1Z2lucy5wdXNoKFtcbiAgICAgICAgJ0BlbGVjdHJvbi1mb3JnZS9wbHVnaW4td2VicGFjaycsXG4gICAgICAgIHtcbiAgICAgICAgICBtYWluQ29uZmlnOiAnLi93ZWJwYWNrLm1haW4uY29uZmlnLmpzJyxcbiAgICAgICAgICByZW5kZXJlcjoge1xuICAgICAgICAgICAgY29uZmlnOiAnLi93ZWJwYWNrLnJlbmRlcmVyLmNvbmZpZy5qcycsXG4gICAgICAgICAgICBlbnRyeVBvaW50czogW3tcbiAgICAgICAgICAgICAgaHRtbDogJy4vc3JjL2luZGV4Lmh0bWwnLFxuICAgICAgICAgICAgICBqczogJy4vc3JjL3JlbmRlcmVyLmpzJyxcbiAgICAgICAgICAgICAgbmFtZTogJ21haW5fd2luZG93JyxcbiAgICAgICAgICAgIH1dLFxuICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICBdKTtcbiAgICAgIGF3YWl0IGZzLndyaXRlSnNvbihwalBhdGgsIGN1cnJlbnRQSiwge1xuICAgICAgICBzcGFjZXM6IDIsXG4gICAgICB9KTtcbiAgICB9KTtcbiAgICBhd2FpdCBhc3luY09yYSgnU2V0dGluZyB1cCB3ZWJwYWNrIGNvbmZpZ3VyYXRpb24nLCBhc3luYyAoKSA9PiB7XG4gICAgICBhd2FpdCB0aGlzLmNvcHlUZW1wbGF0ZUZpbGUoZGlyZWN0b3J5LCAnd2VicGFjay5tYWluLmNvbmZpZy5qcycpO1xuICAgICAgYXdhaXQgdGhpcy5jb3B5VGVtcGxhdGVGaWxlKGRpcmVjdG9yeSwgJ3dlYnBhY2sucmVuZGVyZXIuY29uZmlnLmpzJyk7XG4gICAgICBhd2FpdCB0aGlzLmNvcHlUZW1wbGF0ZUZpbGUoZGlyZWN0b3J5LCAnd2VicGFjay5ydWxlcy5qcycpO1xuICAgICAgYXdhaXQgdGhpcy5jb3B5VGVtcGxhdGVGaWxlKHBhdGguam9pbihkaXJlY3RvcnksICdzcmMnKSwgJ3JlbmRlcmVyLmpzJyk7XG5cbiAgICAgIGF3YWl0IHRoaXMudXBkYXRlRmlsZUJ5TGluZShwYXRoLnJlc29sdmUoZGlyZWN0b3J5LCAnc3JjJywgJ2luZGV4LmpzJyksIChsaW5lKSA9PiB7XG4gICAgICAgIGlmIChsaW5lLmluY2x1ZGVzKCdtYWluV2luZG93LmxvYWRGaWxlJykpIHJldHVybiAnICBtYWluV2luZG93LmxvYWRVUkwoTUFJTl9XSU5ET1dfV0VCUEFDS19FTlRSWSk7JztcbiAgICAgICAgcmV0dXJuIGxpbmU7XG4gICAgICB9LCBwYXRoLnJlc29sdmUoZGlyZWN0b3J5LCAnc3JjJywgJ21haW4uanMnKSk7XG5cbiAgICAgIGF3YWl0IHRoaXMudXBkYXRlRmlsZUJ5TGluZShwYXRoLnJlc29sdmUoZGlyZWN0b3J5LCAnc3JjJywgJ2luZGV4Lmh0bWwnKSwgKGxpbmUpID0+IHtcbiAgICAgICAgaWYgKGxpbmUuaW5jbHVkZXMoJ2xpbmsgcmVsPVwic3R5bGVzaGVldFwiJykpIHJldHVybiAnJztcbiAgICAgICAgcmV0dXJuIGxpbmU7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBuZXcgV2VicGFja1RlbXBsYXRlKCk7XG4iXX0=