"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("source-map-support/register");

var _forgeConfig = require("./forge-config");

var _electronVersion = require("./electron-version");

var _yarnOrNpm = require("./yarn-or-npm");

var _rebuild = _interopRequireDefault(require("./rebuild"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class ForgeUtils {
  constructor() {
    _defineProperty(this, "getElectronVersion", _electronVersion.getElectronVersion);

    _defineProperty(this, "hasYarn", _yarnOrNpm.hasYarn);

    _defineProperty(this, "rebuildHook", _rebuild.default);

    _defineProperty(this, "yarnOrNpmSpawn", _yarnOrNpm.yarnOrNpmSpawn);
  }

  /**
   * Helper for creating a dynamic config value that will get its real value
   * based on the "buildIdentifier" in your Forge config.
   *
   * Usage:
   * `fromBuildIdentifier({ stable: 'App', beta: 'App Beta' })`
   */
  fromBuildIdentifier(map) {
    return (0, _forgeConfig.fromBuildIdentifier)(map);
  }

}

exports.default = ForgeUtils;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsL2luZGV4LnRzIl0sIm5hbWVzIjpbIkZvcmdlVXRpbHMiLCJnZXRFbGVjdHJvblZlcnNpb24iLCJoYXNZYXJuIiwicmVidWlsZEhvb2siLCJ5YXJuT3JOcG1TcGF3biIsImZyb21CdWlsZElkZW50aWZpZXIiLCJtYXAiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7QUFFZSxNQUFNQSxVQUFOLENBQWlCO0FBQUE7QUFBQSxnREFZVEMsbUNBWlM7O0FBQUEscUNBY3BCQyxrQkFkb0I7O0FBQUEseUNBZ0JoQkMsZ0JBaEJnQjs7QUFBQSw0Q0FrQmJDLHlCQWxCYTtBQUFBOztBQUM5QjtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNFQyxFQUFBQSxtQkFBbUIsQ0FBSUMsR0FBSixFQUEwRDtBQUMzRSxXQUFPLHNDQUFvQkEsR0FBcEIsQ0FBUDtBQUNEOztBQVY2QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJ1aWxkSWRlbnRpZmllckNvbmZpZywgQnVpbGRJZGVudGlmaWVyTWFwLCBmcm9tQnVpbGRJZGVudGlmaWVyIH0gZnJvbSAnLi9mb3JnZS1jb25maWcnO1xuaW1wb3J0IHsgZ2V0RWxlY3Ryb25WZXJzaW9uIH0gZnJvbSAnLi9lbGVjdHJvbi12ZXJzaW9uJztcbmltcG9ydCB7IGhhc1lhcm4sIHlhcm5Pck5wbVNwYXduIH0gZnJvbSAnLi95YXJuLW9yLW5wbSc7XG5pbXBvcnQgcmVidWlsZEhvb2sgZnJvbSAnLi9yZWJ1aWxkJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRm9yZ2VVdGlscyB7XG4gIC8qKlxuICAgKiBIZWxwZXIgZm9yIGNyZWF0aW5nIGEgZHluYW1pYyBjb25maWcgdmFsdWUgdGhhdCB3aWxsIGdldCBpdHMgcmVhbCB2YWx1ZVxuICAgKiBiYXNlZCBvbiB0aGUgXCJidWlsZElkZW50aWZpZXJcIiBpbiB5b3VyIEZvcmdlIGNvbmZpZy5cbiAgICpcbiAgICogVXNhZ2U6XG4gICAqIGBmcm9tQnVpbGRJZGVudGlmaWVyKHsgc3RhYmxlOiAnQXBwJywgYmV0YTogJ0FwcCBCZXRhJyB9KWBcbiAgICovXG4gIGZyb21CdWlsZElkZW50aWZpZXI8VD4obWFwOiBCdWlsZElkZW50aWZpZXJNYXA8VD4pOiBCdWlsZElkZW50aWZpZXJDb25maWc8VD4ge1xuICAgIHJldHVybiBmcm9tQnVpbGRJZGVudGlmaWVyKG1hcCk7XG4gIH1cblxuICBnZXRFbGVjdHJvblZlcnNpb24gPSBnZXRFbGVjdHJvblZlcnNpb247XG5cbiAgaGFzWWFybiA9IGhhc1lhcm47XG5cbiAgcmVidWlsZEhvb2sgPSByZWJ1aWxkSG9vaztcblxuICB5YXJuT3JOcG1TcGF3biA9IHlhcm5Pck5wbVNwYXduO1xufVxuIl19