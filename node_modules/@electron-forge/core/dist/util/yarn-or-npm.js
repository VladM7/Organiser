"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hasYarn = exports.yarnOrNpmSpawn = exports.default = void 0;

require("source-map-support/register");

var _crossSpawnPromise = require("@malept/cross-spawn-promise");

var _logSymbols = _interopRequireDefault(require("log-symbols"));

var _yarnOrNpm = _interopRequireDefault(require("yarn-or-npm"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const safeYarnOrNpm = () => {
  const system = (0, _yarnOrNpm.default)();

  switch (process.env.NODE_INSTALLER) {
    case 'yarn':
    case 'npm':
      return process.env.NODE_INSTALLER;

    default:
      if (process.env.NODE_INSTALLER) {
        // eslint-disable-next-line no-console
        console.warn(`${_logSymbols.default.warning} Unknown NODE_INSTALLER, using detected installer ${system}`.yellow);
      }

      return system;
  }
};

var _default = safeYarnOrNpm; // eslint-disable-next-line max-len

exports.default = _default;

const yarnOrNpmSpawn = (args, opts) => (0, _crossSpawnPromise.spawn)(safeYarnOrNpm(), args, opts);

exports.yarnOrNpmSpawn = yarnOrNpmSpawn;

const hasYarn = () => safeYarnOrNpm() === 'yarn';

exports.hasYarn = hasYarn;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsL3lhcm4tb3ItbnBtLnRzIl0sIm5hbWVzIjpbInNhZmVZYXJuT3JOcG0iLCJzeXN0ZW0iLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9JTlNUQUxMRVIiLCJjb25zb2xlIiwid2FybiIsImxvZ1N5bWJvbHMiLCJ3YXJuaW5nIiwieWVsbG93IiwieWFybk9yTnBtU3Bhd24iLCJhcmdzIiwib3B0cyIsImhhc1lhcm4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOzs7O0FBRUEsTUFBTUEsYUFBYSxHQUFHLE1BQU07QUFDMUIsUUFBTUMsTUFBTSxHQUFHLHlCQUFmOztBQUNBLFVBQVFDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxjQUFwQjtBQUNFLFNBQUssTUFBTDtBQUNBLFNBQUssS0FBTDtBQUNFLGFBQU9GLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxjQUFuQjs7QUFDRjtBQUNFLFVBQUlGLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxjQUFoQixFQUFnQztBQUM5QjtBQUNBQyxRQUFBQSxPQUFPLENBQUNDLElBQVIsQ0FBYyxHQUFFQyxvQkFBV0MsT0FBUSxxREFBb0RQLE1BQU8sRUFBakYsQ0FBbUZRLE1BQWhHO0FBQ0Q7O0FBQ0QsYUFBT1IsTUFBUDtBQVRKO0FBV0QsQ0FiRDs7ZUFlZUQsYSxFQUVmOzs7O0FBQ08sTUFBTVUsY0FBYyxHQUFHLENBQUNDLElBQUQsRUFBa0JDLElBQWxCLEtBQWlDLDhCQUFNWixhQUFhLEVBQW5CLEVBQXVCVyxJQUF2QixFQUE2QkMsSUFBN0IsQ0FBeEQ7Ozs7QUFFQSxNQUFNQyxPQUFPLEdBQUcsTUFBTWIsYUFBYSxPQUFPLE1BQTFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3Bhd24gfSBmcm9tICdAbWFsZXB0L2Nyb3NzLXNwYXduLXByb21pc2UnO1xuaW1wb3J0IGxvZ1N5bWJvbHMgZnJvbSAnbG9nLXN5bWJvbHMnO1xuaW1wb3J0IHlhcm5Pck5wbSBmcm9tICd5YXJuLW9yLW5wbSc7XG5cbmNvbnN0IHNhZmVZYXJuT3JOcG0gPSAoKSA9PiB7XG4gIGNvbnN0IHN5c3RlbSA9IHlhcm5Pck5wbSgpO1xuICBzd2l0Y2ggKHByb2Nlc3MuZW52Lk5PREVfSU5TVEFMTEVSKSB7XG4gICAgY2FzZSAneWFybic6XG4gICAgY2FzZSAnbnBtJzpcbiAgICAgIHJldHVybiBwcm9jZXNzLmVudi5OT0RFX0lOU1RBTExFUjtcbiAgICBkZWZhdWx0OlxuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfSU5TVEFMTEVSKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICAgIGNvbnNvbGUud2FybihgJHtsb2dTeW1ib2xzLndhcm5pbmd9IFVua25vd24gTk9ERV9JTlNUQUxMRVIsIHVzaW5nIGRldGVjdGVkIGluc3RhbGxlciAke3N5c3RlbX1gLnllbGxvdyk7XG4gICAgICB9XG4gICAgICByZXR1cm4gc3lzdGVtO1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBzYWZlWWFybk9yTnBtO1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbWF4LWxlblxuZXhwb3J0IGNvbnN0IHlhcm5Pck5wbVNwYXduID0gKGFyZ3M/OiBzdHJpbmdbXSwgb3B0cz86IGFueSkgPT4gc3Bhd24oc2FmZVlhcm5Pck5wbSgpLCBhcmdzLCBvcHRzKTtcblxuZXhwb3J0IGNvbnN0IGhhc1lhcm4gPSAoKSA9PiBzYWZlWWFybk9yTnBtKCkgPT09ICd5YXJuJztcbiJdfQ==